# .github/workflows/deploy-to-aws.yml

name: Deploy to AWS S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run type-check
    
    - name: Run tests
      run: npm run test
    
    - name: Build
      run: npm run build
      env:
        REACT_APP_GEODB_API_KEY: ${{ secrets.REACT_APP_GEODB_API_KEY }}
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/
        retention-days: 1

  deploy-to-s3:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to S3
      run: |
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
    
    # Optional: Invalidate CloudFront distribution if you're using CloudFront
    - name: Invalidate CloudFront distribution
      if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"